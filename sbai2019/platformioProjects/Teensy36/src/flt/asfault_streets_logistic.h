//
// #include <Arduino.h>
// #include <math.h>
//
// #define INPUT_SIZE 64
// #define NUM_CLASSES 5
// #define SELECTED_ATT_SIZE 64
// #define NUM_PREDICTORS 64
// #define CLASS_INDEX 64
//
// /* Instance array must be global
//  * Attributes MUST be sorted in instance array in the following order:
//  * mean_vel
//  * std_vel
//  * temp_ste
//  * temp_mag
//  * temp_roms
//  * temp_mean
//  * temp_tc
//  * temp_zcr
//  * temp_itv
//  * temp_var
//  * temp_std
//  * temp_skewness
//  * temp_kurtosis
//  * temp_ce
//  * temp_ce_norm
//  * temp_crest
//  * temp_max2min
//  * temp_mag2rms
//  * temp_rms2
//  * temp_rssl
//  * temp_mnp
//  * temp_adp
//  * temp_ety
//  * temp_md
//  * temp_iqr2
//  * spec_f0
//  * spec_ste
//  * spec_mag
//  * spec_sc
//  * spec_si
//  * spec_sim
//  * spec_sfm
//  * spec_flux
//  * spec_sro
//  * spec_var
//  * spec_std
//  * spec_skw
//  * spec_kts
//  * spec_max2min
//  * spec_mag2rms
//  * spec_mnp
//  * spec_adp
//  * spec_ety
//  * spec_cov1
//  * spec_cov2
//  * spec_cov3
//  * spec_peaks1
//  * spec_peaks2
//  * spec_peaks3
//  * spec_peaks4
//  * spec_peaks5
//  * spec_peaks6
//  * spec_peaks7
//  * spec_peaks8
//  * spec_peaks9
//  * spec_peaks10
//  * spec_peaks11
//  * spec_peaks12
//  * spec_power1
//  * spec_power2
//  * spec_power3
//  * spec_power4
//  * spec_power5
//  * spec_iqr2
//  */
// float instance[INPUT_SIZE+1];
// const float m_Par[65][4] = {{20.90892947599646, -6.661184149510947, -18114.275265794906, 28.267816851425344}, {-10.086135747056732, 5.5818925893483815, -7461.622083137998, 9.391345068976705}, {-4.818242241156791, 0.9624232194056532, -1823.311591626537, 3.352208365033127}, {1205.3242142055406, 593.4313190615039, 16252.294832587191, -335.97207411337683}, {-19.134969470680176, 25.70827682154117, -7996.716253539317, 34.70955359927933}, {-270.558455267179, -57.794330240401614, -5114.682532564421, -112.63069938010209}, {1.2026074023643172, 3.926896298981311, 101.0074777474893, 1.0543946797842245}, {4.857911146476062, -0.3774027207643534, 395.6613357822309, -3.649297804160049}, {0.19733363023355435, 9.78374869332231, -115.986852059128, 10.384326145097353}, {-83.5390733091902, -20.849243493206625, -4582.0307248593535, 30.637575192045077}, {1205.3242149289586, 593.4312992151129, 16252.294778957721, -335.9720746678394}, {-270.55846013698067, -57.79433005791005, -5114.682522549262, -112.63069761397848}, {24.40754572996243, 29.01415092317818, 2922.236615039915, 12.433635285526135}, {-26.931376527941342, -19.79325507157117, -532.2767016538161, -19.89712484982995}, {0.7105201620999207, 18.36127777051349, -2737.4100918622416, -14.944787957482603}, {0.7105218090269434, 18.361280955841202, -2737.4100882120206, -14.94478800048306}, {103.36014228344128, 44.3751969089713, 2748.9543879710354, 17.477700838698958}, {-83.53907435758596, -20.849237035375097, -4582.030711282876, 30.63757650633141}, {-17.59335187107564, -19.50929414874185, 4030.9282577334075, -9.349019131698311}, {-270.5584654650855, -57.794332033478206, -5114.682513966333, -112.63070146903141}, {-270.5584685806528, -57.794331872647106, -5114.682511272554, -112.63070087368376}, {-37.53979613110953, -32.18637272636966, -10646.668576689452, -25.733682601972017}, {-29.15704012390916, -20.836800245240937, -10055.375470935434, -17.343463810945572}, {54.06611587400893, 19.794540511485067, 6797.820129625821, 29.533409029293}, {-4.386261986366013, 3.8555697054850766, 518.9360749883608, 11.504072561796272}, {-11.046431044654067, -32.82695225580245, 1056.9060823954087, -30.099701234137672}, {-0.42653845982071364, 0.12662393190917162, -145.08069642591795, -1.0807884303239583}, {-2979.9076858839003, -1223.7746341017353, 11498.204566754846, 1679.8719568383788}, {594.6927593605195, -248.14345238541938, -14403.238429997064, 98.5285797406446}, {-0.03597980159226196, -11.261672799243398, 5363.299197393401, -0.9148701049676814}, {0.22458200043316323, 87.78493115752197, 40849.21935098501, -71.75682490807648}, {28.843302819609637, 68.79696423630142, 4338.353148982552, 63.594003013086684}, {23.6501263942316, 21.3079628195889, -9408.069327796056, 22.55973653636474}, {-24.125341127043328, -43.66035290854428, 375.9512031515032, -54.36610276814171}, {3.5104177416188778, 7.941161212503246, -829.1034044682171, 1.1377025262708755}, {-557.0059829916697, -636.4128127586637, -29218.717637169582, -521.5570279927915}, {789.966142116771, 450.7790334193949, -10411.015764408214, 369.1635942744525}, {-178.775557567151, -125.4365689501805, 34782.0825165479, -118.2486182722458}, {199.29419953405954, 124.69668627639862, -31223.595134231666, 115.19009477447682}, {-23.584661049699672, 37.31590495704934, -1117.9636949983242, 123.21681733627256}, {-49.93904440452183, -69.65059125915336, 17503.15006611772, -88.39304201748061}, {-30.139110705058485, -20.7465875643652, -486.4766185492746, -17.94272230429889}, {-33.83348097561976, -21.188059128398006, -1297.0511624952915, -22.436144498724214}, {-62.60759274159577, -49.325258840319506, 15320.164749057692, -43.19350168341658}, {1205.3242431819117, 593.4312940002549, 16252.294841616338, -335.97205945087916}, {-2.216643742110177, -1.674925243247629, 454.6640562845803, 0.2760752593291899}, {11.234554754678888, 7.526559838855875, -2518.994009428411, -42.40394161660064}, {-16.371420394336084, -12.493859060396794, 350.21094886308714, -12.047168287861547}, {-4.284832921864085, -1.0470039916622182, 462.8907933134548, -0.6965310579429909}, {34.18104179412644, 29.45510497815331, -2470.3723658811773, 27.991918350829543}, {-2.1716381559720284, 5.74015923724996, -976.4556277672513, 6.044246478535227}, {-3.328641336578853, -6.431023111561686, 550.6493686222115, -7.356004388267708}, {1.0096857961932029, 2.6445888462211973, -67.56213926796246, 2.5477528557151956}, {34.83396411283834, 31.4719202129112, -4896.307722923504, 23.287676605382373}, {53.111643971566345, 40.516505180652345, 1903.6154302458856, 82.29042177475684}, {58.57529374183824, 48.19722901248199, 730.3989699182748, 56.74527128682698}, {18.25539755531529, 13.231359154365615, 1104.5261220995096, -7.640082025337009}, {22.0883531272852, 9.11650703486805, -70.55719994896899, 8.092047731030169}, {-4.102558401436056, -7.882117993459992, -3379.93419940068, 44.16737646080743}, {-65.99753760962928, -54.15891649963642, -3070.9392067097665, -122.27798419849299}, {-180.0923188702671, -161.48952448617067, -1637.493384832473, -336.4841801378683}, {-30.03164147603671, -70.82873008254954, 5202.888820361382, -83.61197114201165}, {2.2130003096552793, -3.123638607122131, -135.8978890636654, -5.182138737122248}, {11.983032140283775, -9.209272600289726, 648.2255825704847, -23.082586730791135}, {11.303919971558145, 29.188646223378015, 2915.4297361422528, 2.6086937654536237}};
// const int m_SelectedAttributes[65] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64};
//
// /* Function classify description:
//  * Instance array must be initializated, with appropriated attributes, before calling this function
//  * Output number 0 means that the instance was classified as ruim
//  * Output number 1 means that the instance was classified as regular
//  * Output number 2 means that the instance was classified as pessimo
//  * Output number 3 means that the instance was classified as bom
//  * Output number 4 means that the instance was classified as obstaculos
//  */
// int classify(){
// 	float prob[NUM_CLASSES];
// 	float newInstance[NUM_PREDICTORS+1];
// 	newInstance[0] = 1.0;
// 	for (int i = 1; i <= SELECTED_ATT_SIZE; i++){
// 		if (m_SelectedAttributes[i] <= CLASS_INDEX) {
// 			newInstance[i] = instance[m_SelectedAttributes[i-1]];
// 		}
// 		else {
// 			newInstance[i] = instance[m_SelectedAttributes[i]];
// 		}
// 	}
// 	float v[NUM_CLASSES] = {0};
// 	for (int i = 0; i < NUM_CLASSES-1; i++) {
// 		for (int j = 0; j <= NUM_PREDICTORS; j++) {
// 			v[i] += m_Par[j][i] * newInstance[j];
// 		}
// 	}
// 	v[NUM_CLASSES-1] = 0;
// 	for (int i = 0; i < NUM_CLASSES; i++) {
// 		float acc = 0.0;
// 		for (int j = 0; j < NUM_CLASSES-1; j++) {
// 			acc += exp(v[j]-v[i]);
// 		}
// 		prob[i] = 1.0 / (acc + exp(-v[i]));
// 	}
// 	int indexMax = 0;
// 	for (int i = 1; i < NUM_CLASSES; i++) {
// 		if (prob[i] > prob[indexMax]) {
// 			indexMax = i;
// 		}
// 	}
// 	return indexMax;
// }
